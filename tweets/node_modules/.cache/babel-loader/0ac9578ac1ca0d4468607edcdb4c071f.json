{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jagru\\\\Desktop\\\\IR_final\\\\CSE_4535_Fall_2021\\\\App\\\\tweets\\\\src\\\\components\\\\pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './pagination.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Pagination(props) {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageNumberLimit, setpageNumberLimit] = useState(5);\n  const [maxpageNumberLimit, setmaxpageNumberLimit] = useState(5);\n  const [minpageNumberLimit, setminpageNumberLimit] = useState(0);\n\n  const changePage = () => {\n    setCurrentPage(1);\n  };\n\n  console.log(props);\n  React.useEffect(() => {\n    console.log(\"hiii\");\n\n    if (props.pagination) {\n      setCurrentPage(1);\n      props.handlePagination();\n    }\n  }, []);\n\n  const handleNextbn = e => {\n    window.scrollTo(0, 0);\n    e.preventDefault();\n\n    if (currentPage < props.pages) {\n      setCurrentPage(currentPage + 1);\n      props.handlePageChange(currentPage, 1);\n    } // console.log(currentPage, maxpageNumberLimit)\n\n\n    if (currentPage + 1 > maxpageNumberLimit) {\n      // console.log(\"next\")\n      setmaxpageNumberLimit(maxpageNumberLimit + pageNumberLimit);\n      setminpageNumberLimit(minpageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = e => {\n    window.scrollTo(0, 0);\n    e.preventDefault();\n\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n      props.handlePageChange(currentPage, 2);\n    } // console.log(currentPage  , maxpageNumberLimit)\n\n\n    if (currentPage > 1 && (currentPage - 1) % pageNumberLimit == 0) {\n      // console.log(\"prev\")\n      setmaxpageNumberLimit(maxpageNumberLimit - pageNumberLimit);\n      setminpageNumberLimit(minpageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  const renderPageNumbers = Array.from(Array(props.pages), (e, i) => {\n    if (i + 1 < maxpageNumberLimit + 1 && i + 1 > minpageNumberLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        value: i + 1,\n        id: i + 1,\n        onClick: e => {\n          e.preventDefault();\n          setCurrentPage(Number(e.target.id));\n          props.handlePageChange(Number(e.target.id), 0);\n        },\n        className: currentPage == i + 1 ? 'active' : null,\n        children: i + 1\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    } else {\n      return null;\n    }\n  });\n  let pageIncrementBtn = null;\n\n  if (props.pages > maxpageNumberLimit) {\n    pageIncrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handleNextbn,\n      children: \"\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }, this);\n  }\n\n  let pageDecrementBtn = null;\n\n  if (minpageNumberLimit > 1) {\n    pageDecrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handlePrevbtn,\n      children: \"\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 26\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pageNumbers\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"0.7em\"\n            },\n            onClick: handlePrevbtn,\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), pageDecrementBtn, renderPageNumbers, pageIncrementBtn, /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"0.7em\"\n            },\n            onClick: handleNextbn,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Pagination, \"SxzbPh7g3aLb+6jyRSZUTmOGJ54=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/Jagru/Desktop/IR_final/CSE_4535_Fall_2021/App/tweets/src/components/pagination.js"],"names":["React","useState","useEffect","Pagination","props","currentPage","setCurrentPage","pageNumberLimit","setpageNumberLimit","maxpageNumberLimit","setmaxpageNumberLimit","minpageNumberLimit","setminpageNumberLimit","changePage","console","log","pagination","handlePagination","handleNextbn","e","window","scrollTo","preventDefault","pages","handlePageChange","handlePrevbtn","renderPageNumbers","Array","from","i","Number","target","id","pageIncrementBtn","pageDecrementBtn","fontSize"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport './pagination.css'\r\n\r\nfunction Pagination(props){\r\n    \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n    const [maxpageNumberLimit, setmaxpageNumberLimit] = useState(5);\r\n    const [minpageNumberLimit, setminpageNumberLimit] = useState(0);\r\n    \r\n    const changePage=()=>{\r\n        setCurrentPage(1)\r\n    }\r\n    console.log(props)\r\n    React.useEffect(() => {\r\n        console.log(\"hiii\")\r\n        if (props.pagination) {\r\n          setCurrentPage(1)\r\n          props.handlePagination()\r\n        }\r\n\r\n      }, [])\r\n    const handleNextbn = (e) => {\r\n        window.scrollTo(0,0)\r\n        e.preventDefault();\r\n        if(currentPage<props.pages){\r\n            setCurrentPage(currentPage + 1)\r\n            props.handlePageChange(currentPage,1)\r\n        }\r\n        // console.log(currentPage, maxpageNumberLimit)\r\n        if ((currentPage + 1) > maxpageNumberLimit) {\r\n            // console.log(\"next\")\r\n            setmaxpageNumberLimit(maxpageNumberLimit + pageNumberLimit);\r\n            setminpageNumberLimit(minpageNumberLimit + pageNumberLimit);\r\n        }\r\n    }\r\n    const handlePrevbtn = (e) => {\r\n        window.scrollTo(0,0)\r\n        e.preventDefault();\r\n        if(currentPage>1){\r\n        setCurrentPage(currentPage - 1);\r\n        props.handlePageChange(currentPage,2)\r\n        }\r\n        // console.log(currentPage  , maxpageNumberLimit)\r\n        if (currentPage>1 && (currentPage - 1) % pageNumberLimit == 0) {\r\n            // console.log(\"prev\")\r\n            setmaxpageNumberLimit(maxpageNumberLimit - pageNumberLimit)\r\n            setminpageNumberLimit(minpageNumberLimit - pageNumberLimit)\r\n        }\r\n        \r\n    }\r\n    const renderPageNumbers = Array.from(Array(props.pages), (e, i) => {\r\n        if (i + 1 < maxpageNumberLimit + 1 && i + 1 > minpageNumberLimit) {\r\n            return <li key={i} value={i + 1} id={i + 1} onClick={(e) => { e.preventDefault();setCurrentPage(Number(e.target.id)); props.handlePageChange(Number(e.target.id),0) }}\r\n                className={currentPage == i + 1 ? 'active' : null}>{i + 1}</li>\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    })\r\n    let pageIncrementBtn=null;\r\n    if(props.pages>maxpageNumberLimit){\r\n        pageIncrementBtn=<li onClick={handleNextbn}>&hellip;</li>\r\n    }\r\n    let pageDecrementBtn=null;\r\n    if(minpageNumberLimit>1){\r\n        pageDecrementBtn=<li onClick={handlePrevbtn}>&hellip;</li>\r\n    }\r\n    return (\r\n        <div>\r\n            <ul className=\"pageNumbers\">\r\n                <li>\r\n                    <button><p style={{ fontSize: \"0.7em\" }} onClick={handlePrevbtn}>Prev</p></button>\r\n                </li>\r\n                {pageDecrementBtn}\r\n                {renderPageNumbers}\r\n                {pageIncrementBtn}\r\n                <li>\r\n                    <button><p style={{ fontSize: \"0.7em\" }} onClick={handleNextbn}>Next</p></button>\r\n                </li>\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}